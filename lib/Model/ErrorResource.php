<?php
/**
 * ErrorResource
 *
 * PHP version 5
 *
 * @category Class
 * @package  CyberSource
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace CyberSource\Model;

use \ArrayAccess;
/**
 * ErrorResource Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     CyberSource
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ErrorResource implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'correlation_id' => 'string',
        'request_timestamp' => 'string',
        'status' => 'string',
        'resource' => 'string',
        'method' => 'string',
        'original_request' => 'string',
        'original_response' => 'string',
        '_links' => '\CyberSource\Model\SelfLink'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'correlation_id' => 'correlationId',
        'request_timestamp' => 'requestTimestamp',
        'status' => 'status',
        'resource' => 'resource',
        'method' => 'method',
        'original_request' => 'originalRequest',
        'original_response' => 'originalResponse',
        '_links' => '_links'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'correlation_id' => 'setCorrelationId',
        'request_timestamp' => 'setRequestTimestamp',
        'status' => 'setStatus',
        'resource' => 'setResource',
        'method' => 'setMethod',
        'original_request' => 'setOriginalRequest',
        'original_response' => 'setOriginalResponse',
        '_links' => 'setLinks'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'correlation_id' => 'getCorrelationId',
        'request_timestamp' => 'getRequestTimestamp',
        'status' => 'getStatus',
        'resource' => 'getResource',
        'method' => 'getMethod',
        'original_request' => 'getOriginalRequest',
        'original_response' => 'getOriginalResponse',
        '_links' => 'getLinks'
    );
  
    
    /**
      * $correlation_id Correlation ID
      * @var string
      */
    protected $correlation_id;
    
    /**
      * $request_timestamp Time in UTC when the request was logged.
      * @var string
      */
    protected $request_timestamp;
    
    /**
      * $status HTTP Status code
      * @var string
      */
    protected $status;
    
    /**
      * $resource API resource
      * @var string
      */
    protected $resource;
    
    /**
      * $method HTTP Method
      * @var string
      */
    protected $method;
    
    /**
      * $original_request Original request when the error happened
      * @var string
      */
    protected $original_request;
    
    /**
      * $original_response Original response when the error happened
      * @var string
      */
    protected $original_response;
    
    /**
      * $_links 
      * @var \CyberSource\Model\SelfLink
      */
    protected $_links;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->correlation_id = $data["correlation_id"];
            $this->request_timestamp = $data["request_timestamp"];
            $this->status = $data["status"];
            $this->resource = $data["resource"];
            $this->method = $data["method"];
            $this->original_request = $data["original_request"];
            $this->original_response = $data["original_response"];
            $this->_links = $data["_links"];
        }
    }
    
    /**
     * Gets correlation_id
     * @return string
     */
    public function getCorrelationId()
    {
        return $this->correlation_id;
    }
  
    /**
     * Sets correlation_id
     * @param string $correlation_id Correlation ID
     * @return $this
     */
    public function setCorrelationId($correlation_id)
    {
        
        $this->correlation_id = $correlation_id;
        return $this;
    }
    
    /**
     * Gets request_timestamp
     * @return string
     */
    public function getRequestTimestamp()
    {
        return $this->request_timestamp;
    }
  
    /**
     * Sets request_timestamp
     * @param string $request_timestamp Time in UTC when the request was logged.
     * @return $this
     */
    public function setRequestTimestamp($request_timestamp)
    {
        
        $this->request_timestamp = $request_timestamp;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status HTTP Status code
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets resource
     * @return string
     */
    public function getResource()
    {
        return $this->resource;
    }
  
    /**
     * Sets resource
     * @param string $resource API resource
     * @return $this
     */
    public function setResource($resource)
    {
        
        $this->resource = $resource;
        return $this;
    }
    
    /**
     * Gets method
     * @return string
     */
    public function getMethod()
    {
        return $this->method;
    }
  
    /**
     * Sets method
     * @param string $method HTTP Method
     * @return $this
     */
    public function setMethod($method)
    {
        
        $this->method = $method;
        return $this;
    }
    
    /**
     * Gets original_request
     * @return string
     */
    public function getOriginalRequest()
    {
        return $this->original_request;
    }
  
    /**
     * Sets original_request
     * @param string $original_request Original request when the error happened
     * @return $this
     */
    public function setOriginalRequest($original_request)
    {
        
        $this->original_request = $original_request;
        return $this;
    }
    
    /**
     * Gets original_response
     * @return string
     */
    public function getOriginalResponse()
    {
        return $this->original_response;
    }
  
    /**
     * Sets original_response
     * @param string $original_response Original response when the error happened
     * @return $this
     */
    public function setOriginalResponse($original_response)
    {
        
        $this->original_response = $original_response;
        return $this;
    }
    
    /**
     * Gets _links
     * @return \CyberSource\Model\SelfLink
     */
    public function getLinks()
    {
        return $this->_links;
    }
  
    /**
     * Sets _links
     * @param \CyberSource\Model\SelfLink $_links 
     * @return $this
     */
    public function setLinks($_links)
    {
        
        $this->_links = $_links;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
